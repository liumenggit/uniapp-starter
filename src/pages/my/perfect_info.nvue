<template>
    <tm-app>
        <tm-form @submit="confirm" ref="form" v-model="userPerfectParams" layout="vertical">
            <tm-form-item required label="姓名"
                          :rules="[{required:true,message:'请输入姓名',validator:(val)=>isChina(val)}]" field="realname"
                          :border="false" showTopErrorGap
            >
                <tm-input placeholder="请输入姓名" type="text" v-model.lazy="userPerfectParams.realname"
                          :showBottomBotder="false"
                          prefix="td-user"
                ></tm-input>
            </tm-form-item>
            <tm-form-item required label="手机号"
                          :rules="[{required:true,message:'请输入手机号',validator:(val)=>isPhone(val)}]" field="phone"
                          :border="false" showTopErrorGap
            >
                <tm-input placeholder="请输入手机号" type="number" v-model.lazy="userPerfectParams.phone"
                          :showBottomBotder="false"
                          prefix="tmicon-mobile-alt"
                ></tm-input>
            </tm-form-item>
            <tm-form-item required label="验证码"
                          :rules="[{required:true,message:'请输入验证码',validator:(val)=>{return val && val.length === VERIFY_CODE_LENGTH}}]"
                          field="code"
                          :border="false" showTopErrorGap
            >
                <tm-input placeholder="请输入验证码" type="number" v-model.lazy="userPerfectParams.code"
                          :showBottomBotder="false"
                          :input-padding="[24,0,0,0]"
                          prefix="tmicon-ios-finger-print"
                >
                    <template v-slot:right>
                        <tm-button @click="sendPhoneCode(userPerfectParams.phone as number, sendCodes)"
                                   :loading="sendCodeLoading" size="small" :width="150" :round="4"
                                   :disabled="codeButtonState"
                                   :label="codeButtonLabel"
                        ></tm-button>
                    </template>
                </tm-input>
            </tm-form-item>
            <tm-form-item :border="false">
                <tm-button form-type="submit" label="提交" block></tm-button>
            </tm-form-item>
        </tm-form>
    </tm-app>
</template>

<script lang="ts" setup>
import {useRequest} from 'alova';
import {
    computed,
    ref,
    Ref
} from 'vue';
import {useUserStore} from '@/state/modules/user';
import {sendCode} from '@/services/api/common';
import {userPerfect} from '@/services/api/user';
import {isChina, isPhone, toast} from '@/tmui/tool/function/util';
import {VERIFY_CODE_LENGTH, VERIFY_CODE_TEXT, VERIFY_CODE_TIME, VERIFY_CODE_TIME_TEXT} from '@/enums/verifyEnum';
import {sendPhoneCode} from '@/utils/common/send-code';
import {UserPerfectParams} from '@/services/model/userModel';
import {useRouter} from '@/hooks/router';

const router = useRouter();
const {send: sendUserPerfectParams} = useRequest(perfectParams => userPerfect(perfectParams), {immediate: false});

const userPerfectParams: Ref<UserPerfectParams> = ref({open_id: useUserStore().user_info.open_id});
const confirm = (e: any) => {
    if (e.validate) {
        e.data.open_id = useUserStore().user_info.open_id;
        sendUserPerfectParams(e.data).then((res) => {
            useUserStore().setUserInfo(res.user_info);
            toast('完善信息成功');
            setTimeout(() => {
                router.back();
            }, 1500);
        });
    }
};

// 发送验证码
let codeButtonState = ref(false);
let codeButtonLabel = ref(VERIFY_CODE_TEXT);
const {
    send: sendCodes,
    loading: sendCodeLoading,
    onSuccess: sendCodeSuccess
} = useRequest(phone => sendCode(phone), {immediate: false});


sendCodeSuccess(() => {
    codeButtonState.value = true;
    let countDown = VERIFY_CODE_TIME;
    const timer = setInterval(function () {
        countDown--;
        if (countDown <= 0) {
            clearInterval(timer);
            codeButtonLabel.value = VERIFY_CODE_TEXT;
            codeButtonState.value = false;
        } else {
            codeButtonLabel.value = countDown + VERIFY_CODE_TIME_TEXT;
        }
    }, 1000);
});

</script>
<style>
</style>
