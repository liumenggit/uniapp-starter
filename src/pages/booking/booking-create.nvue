<template>
    <tm-app>
        <tm-sticky :offset="0" :height="1000">
            <template v-slot:sticky>
                <tm-sheet :margin="[0,0]">
                    <!-- changeable-->
                    <tm-steps status="wait" type="number" v-model:current="stepsCurrent" :defaultCurrent="0">
                        <tm-steps-item :title="item.title" v-for="(item, index) in stepsList" :key="index">
                        </tm-steps-item>
                    </tm-steps>
                </tm-sheet>
            </template>
            <view v-if="stepsCurrent == 0">
                <tm-image src="https://via.placeholder.com/750x1000" :width="750" :height="0"
                          model="widthFix"></tm-image>
                <tm-button :margin="[32,32]" block @click="stepsCurrent = 1 ; stepsList[0].start = true"
                           label="下一步"></tm-button>
            </view>
            <view v-if="stepsCurrent == 1">
                <tm-image src="https://via.placeholder.com/750x1000" :width="750" :height="0"
                          model="widthFix"></tm-image>
                <tm-button :margin="[40,40]" block @click="stepsCurrent = 2; stepsList[1].start = true"
                           label="已经阅读并同意签订1"></tm-button>
            </view>
            <view v-if="stepsCurrent == 2">
                <tm-image src="https://via.placeholder.com/750x1000" :width="750" :height="0"
                          model="widthFix"></tm-image>
                <tm-button :margin="[40,40]" block @click="stepsCurrent = 3; stepsList[2].start = true"
                           label="已经阅读并同意签订2"></tm-button>
            </view>
            <view v-if="stepsCurrent == 3">
                <tm-image src="https://via.placeholder.com/750x1000" :width="750" :height="0"
                          model="widthFix"></tm-image>
                <tm-button :margin="[40,40]" block
                           @click="stepsCurrent = 4 ; stepsList[3].start = true;; stepsList[4].start = true"
                           label="已经阅读并同意签订3"></tm-button>
            </view>
            <tm-form @submit="confirm" ref="form" v-model="bookingOpenParams" layout="vertical"
                     v-if="stepsCurrent == 4">
                <tm-form-item required label="用户" field="account_id" :border="false"
                              :rules="[{required:true,message:'请选择用户'}]"
                >
                    <tm-input placeholder="选择用户"
                              :ready-only="true"
                              @click="showAccountList=!showAccountList"
                              :userInteractionEnabled="false"
                              :model-value="accountText?.user_name"
                              :showBottomBotder="false"
                    />
                    <template v-slot:desc>
                        <view class="ma-10" v-if="accountText">
                            <tm-descriptions-item label="手机号码" :value="accountText.bind_village_name"
                                                  :font-size="26"/>
                            <tm-descriptions-item label="居住小区" :value="accountText.bind_village_name"
                                                  :font-size="26"/>
                            <tm-descriptions-item label="详细地址" :value="accountText.bind_address" :font-size="26"/>
                            <tm-descriptions-item label="身份证号" :value="accountText.bind_idcard" :font-size="26"/>
                        </view>
                    </template>
                </tm-form-item>
                <tm-form-item required label="上传身份证资料" field="idcard_z"
                              :rules="{required:true,message:'请上传图片'}"
                              help="请分别点击下方选取文件上传"
                >
                    <view class="flex-row-center-between flex-wrap">
                        <tm-upload :rows="1" :width="300" :imageHeight="200"
                                   :defaultValue="bookingOpenParams.idcard_z"
                                   v-model:model-value="bookingOpenParams.idcard_z"
                                   :max-file="1"
                                   :url="getBaseUrl() + getUploadUrl()"
                                   :form-data="{platform_id: getPlatformId()}"
                                   :on-success-after="isUploadSuccess"
                        >
                            <template v-slot:icon>
                                <tm-text label="人像"></tm-text>
                            </template>
                        </tm-upload>
                        <tm-upload :rows="1" :width="300" :imageHeight="200"
                                   :defaultValue="bookingOpenParams.idcard_f"
                                   v-model:model-value="bookingOpenParams.idcard_f"
                                   :max-file="1"
                                   :url="getBaseUrl() + getUploadUrl()"
                                   :form-data="{platform_id: getPlatformId()}"
                                   :on-success-after="isUploadSuccess"
                        >
                            <template v-slot:icon>
                                <tm-text label="国徽"></tm-text>
                            </template>
                        </tm-upload>
                    </view>
                </tm-form-item>
                <tm-form-item required label="上传房产证明" field="house"
                              :rules="{required:true,message:'请上传图片'}"
                              help="请分别点击下方选取文件上传"
                >
                    <tm-upload :rows="4" :width="620" :defaultValue="bookingOpenParams.house"
                               v-model:model-value="bookingOpenParams.house"
                               :url="getBaseUrl() + getUploadUrl()"
                               :form-data="{platform_id: getPlatformId()}"
                               :on-success-after="isUploadSuccess"
                    ></tm-upload>
                    <template v-slot:tag>
                        <tm-tag label="查看示例" size="xs" color="red" outlined></tm-tag>
                    </template>
                </tm-form-item>
                <tm-form-item required label="上传管道口/表具图片" field="gdk"
                              :rules="{required:true,message:'请上传图片'}"
                              help="请分别点击下方选取文件上传"
                >
                    <tm-upload :rows="4" :width="620" :defaultValue="bookingOpenParams.gdk"
                               v-model:model-value="bookingOpenParams.gdk"
                               :url="getBaseUrl() + getUploadUrl()"
                               :form-data="{platform_id: getPlatformId()}"
                               :on-success-after="isUploadSuccess"
                    ></tm-upload>
                    <template v-slot:tag>
                        <tm-popover position="br" :width="400" transprent>
                            <tm-tag label="查看示例" size="xs" color="red" outlined></tm-tag>
                            <template v-slot:label>
                                <tm-image
                                    src="http://w720190822.oss-cn-qingdao.aliyuncs.com/images/20230510/71eeffa773867855e5b9580ab741b106.jpg"></tm-image>
                            </template>
                        </tm-popover>

                    </template>
                </tm-form-item>
                <tm-form-item label="签名" required field="signature" :border="false" showTopErrorGap>
                    <tm-sign-board class="border" :lineWidth="3" lineColor="#4ec752" ref="board" :width="638"
                                   :height="400"></tm-sign-board>
                    <view class="flex-row-center-end flex-wrap">
                        <tm-button size="mini" label="清空" color="red" :margin="[0,0,40,0]"
                                   @click="proxy.$refs.board.clear()"/>
                        <tm-button size="mini" label="保存" @click="saveSign"/>
                    </view>
                </tm-form-item>
                <tm-form-item :border="false">
                    <tm-button form-type="submit" label="提交" block :loading="createBookingOpenLoading"></tm-button>
                </tm-form-item>
            </tm-form>
        </tm-sticky>
        <tm-picker :columns="bookingAfterTypeList" v-model:show="showbookingAfterTypeList" selected-model="id"
                   map-key="title"
                   v-model:model-value="bookingOpenParams.category" :disabled="true"
        ></tm-picker>

        <tm-picker :columns="accountList" v-model:show="showAccountList" selected-model="id" map-key="user_name"
                   v-model:model-value="bookingOpenParams.account_id" :disabled="true"
        ></tm-picker>
        <tm-notification placement="top" ref="msg" label="消息提醒" :offset="[100,100]"
                         :duration="5000"></tm-notification>
    </tm-app>
</template>

<script lang="ts" setup>
import {
    computed, getCurrentInstance,
    ref,
    Ref
} from 'vue';
import {useRequest, useWatcher} from 'alova';
import {createBookingOpen, getBookingAfterTypeList, getBookingNotice} from '@/services/api/booking';
import {getAccountList} from '@/services/api/account';
import {sendCode, uploadOssFile} from '@/services/api/common';
import {getBaseUrl, getPlatformId, getUploadUrl} from '@/utils/env';
import {isUploadSuccess} from '@/utils/common/upload-file';
import tmSignBoard from '@/tmui/components/tm-sign-board/tm-sign-board.vue';
import {base64ToFile} from '@/utils/common/base64-to-file';
import {toast} from '@/tmui/tool/function/util';
import {useRouter} from '@/hooks/router';

const msg = ref<InstanceType<typeof tmNotification> | null>(null);
const router = useRouter();
const {proxy} = getCurrentInstance();
const board = ref<InstanceType<typeof tmSignBoard> | null>(null);
const stepsList = ref([
    {title: '新手指引', start: false},
    {title: '开户协议', start: false},
    {title: '供用合同', start: false},
    {title: '使用须知', start: false},
    {title: '在线开户', start: false},
]);


const stepsCurrent = ref(0);

const showbookingAfterTypeList = ref(false);
const showAccountList = ref(false);
const bookingOpenParams: Ref<BookingOpenParams> = ref({});


// 提交
const {
    send: sendCreateBookingOpen,
    loading: createBookingOpenLoading
} = useRequest(bookingOpenParams => createBookingOpen(bookingOpenParams), {immediate: false});

const {
    data: bookingAfterTypeList,
} = useRequest(
    () => getBookingAfterTypeList(),
    {
        immediate: true,
        initialData: []
    }
);
/**
 * 获取预约须知
 */
const {
    data: bookingNotice,
} = useRequest(
    () => getBookingNotice('open'),
    {
        immediate: true,
        initialData: []
    }
);
const mattersText = computed(() => bookingAfterTypeList?.value.find(item => item.id === (bookingOpenParams.value?.category ? bookingOpenParams.value?.category[0] : 0)));

const {
    data: accountList,
} = useRequest(
    () => getAccountList(),
    {
        immediate: true,
        initialData: []
    }
);
const accountText = computed(() => accountList?.value.find(item => item.id === (bookingOpenParams.value?.account_id ? bookingOpenParams.value?.account_id[0] : 0)));


const saveSign = async () => {
    const base64Data = await board.value?.save();
    const file = base64ToFile(base64Data);
    uploadOssFile(file).then((signUrl) => {
        console.log('签名链接', signUrl);
        toast('保存成功');
        bookingOpenParams.value.signature = signUrl;
    }).catch((err) => {
        toast('保存失败');
        console.log('err', err);
    });
};

const confirm = (e: any) => {
    // console.log(stepsList.value);
    // const weidu = stepsList.value.filter(item => !item.start).map(item => item.title).join(',');
    // toast('你有未阅读的协议' + weidu,);
    // console.log('检查未读', weidu);
    // msg.value?.show({label: '你有未阅读的协议' + weidu});
    if (e.validate) {
        const params: Ref<BookingOpenParams> = ref({
            gdk: e.data.gdk.map((item: any) => {
                return item.url;
            }).join(';'),
            house: e.data.house.map((item: any) => {
                return item.url;
            }).join(';'),
            account_id: e.data.account_id[0],
            idcard_f: e.data.idcard_f[0].url,
            idcard_z: e.data.idcard_z[0].url,
            signature: e.data.signature
        });

        sendCreateBookingOpen(params.value).then((res) => {
            toast('开户预约成功');
            if (res.redirect_url) {
                router.go(res.redirect_url);
                console.log('res', res);
            } else {
                // 我的预约
                router.back();
            }
        }).catch((err) => {
            console.log('err', err);
            toast('开户预约失败');
        });
    }

};
</script>
<style>
</style>
