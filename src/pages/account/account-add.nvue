<template>
    <tm-app>
        <tm-sheet :padding="[0,0]">
            <tm-form @submit="confirm" ref="form" v-model="accountParams" layout="vertical">
                <tm-segtab :width="636" :list="segtabList" :defaultValue="gasRequired"
                           v-model:model-value="gasRequired"></tm-segtab>
                <tm-form-item :required="!!gasRequired" v-if="gasRequired" label="燃气号"
                              :rules="[{message:'请输入燃气号'}]"
                              field="bind_name"
                              :border="false" showTopErrorGap
                >
                    <tm-input placeholder="请输入燃气号" v-model.lazy="accountParams.bind_gas"
                              :showBottomBotder="false"
                    ></tm-input>
                </tm-form-item>
                <tm-form-item required label="户主名" :rules="[{required:true,message:'请输入户主名',validator:(val)=>isChina(val)}]"
                              field="bind_name"
                              :border="false" showTopErrorGap
                >
                    <tm-input placeholder="请输入户主名" type="text" v-model.lazy="accountParams.bind_name"
                              :showBottomBotder="false"

                    ></tm-input>
                </tm-form-item>
                <tm-form-item required label="身份账号码" :rules="[{required:true,message:'请输入身份账号码',validator:(val)=>isIdCar(val)}]"
                              field="bind_idcard"
                              :border="false" showTopErrorGap
                >
                    <tm-input placeholder="请输入身份账号码" type="idcard" v-model.lazy="accountParams.bind_idcard"
                              :showBottomBotder="false"

                    ></tm-input>
                </tm-form-item>
                <tm-form-item required label="电话号码" :rules="[{required:true,message:'请输入电话号码',validator:(val)=>isPhone(val)}]"
                              field="bind_phone"
                              :border="false" showTopErrorGap
                >
                    <tm-input placeholder="请输入电话号码" type="number" v-model.lazy="accountParams.bind_phone"
                              :showBottomBotder="false"

                    ></tm-input>
                </tm-form-item>
                <tm-form-item required label="验证码" :rules="[{required:true,message:'请输入验证码',validator:(val)=>{return val && val.length === VERIFY_CODE_LENGTH}}]" field="code"
                              :border="false" showTopErrorGap
                >
                    <tm-input placeholder="请输入验证码" type="number" v-model.lazy="accountParams.code"
                              :showBottomBotder="false" :input-padding="[24,0,0,0]"
                    >
                        <template v-slot:right>
                            <tm-button @click="sendPhoneCode(accountParams.bind_phone as number, sendCodes)"
                                       :loading="sendCodeLoading" size="small" :width="150"
                                       :disabled="codeButtonState"
                                       :label="codeButtonLabel"
                            ></tm-button>
                        </template>
                    </tm-input>
                </tm-form-item>
                <tm-form-item required label="小区选择" field="bind_village" :border="false"
                              :rules="[{required:true,message:'请选择小区'}]"
                >
                    <tm-input placeholder="请输入小区信息进行搜索"
                              :ready-only="true"
                              @click="showPicker=!showPicker"
                              :userInteractionEnabled="false"
                              :model-value="villageList ? villageList.find(item => item.id === Array.isArray(accountParams.bind_village) ? accountParams.bind_village[0]:accountParams.bind_village)?.title : ''"
                              :showBottomBotder="false"
                    />
                </tm-form-item>
                <tm-form-item required label="地址信息" :rules="[{required:true,message:'请输入地址信息'}]"
                              field="bind_village"
                              :border="false" showTopErrorGap
                >
                    <tm-input placeholder="请输入详细地址"
                              v-model.lazy="accountParams.bind_address"
                              :showBottomBotder="false"
                    />
                </tm-form-item>
                <tm-form-item :border="false">
                    <tm-button :loading="sendPutAccountLoading" form-type="submit" label="提交" block></tm-button>
                </tm-form-item>
            </tm-form>
        </tm-sheet>
        <tm-picker :columns="villageList" v-model:show="showPicker" selected-model="id" map-key="title"
                   v-model:model-value="accountParams.bind_village"
        ></tm-picker>
    </tm-app>
</template>

<script lang="ts" setup>
import {
    ref,
    Ref
} from 'vue';
import {sendPhoneCode} from '@/utils/common/send-code';
import {getVillageList} from '@/services/api/common';
import {sendCode} from '@/services/api/common';
import {useRequest, useWatcher} from 'alova';
import {isChina, isIdCar, isPhone, toast} from '@/tmui/tool/function/util';
import {getAccountInfo, putAccount} from '@/services/api/account';
import {useRoute, useRouter} from '@/hooks/router';
import {VERIFY_CODE_LENGTH, VERIFY_CODE_TEXT, VERIFY_CODE_TIME, VERIFY_CODE_TIME_TEXT} from '@/enums/verifyEnum';
import {TOACT_SUCCESS} from '@/enums/toastEnum';

const router = useRouter();
const showPicker = ref(false);
// TODO 根据传递
const gasRequired = ref(0);
const segtabList = ref([
    {text: '没燃气号', id: 0},
    {text: '有燃气号', id: 1}
]);
let accountParams: Ref<AccountParams> = ref({});
if (useRoute().query.id) {
    getAccountInfo(useRoute().query.id as number).send().then((res) => {
        accountParams.value = res;
        uni.setNavigationBarTitle({title: '修改账户信息'});
    });
}

// 发送验证码
let codeButtonState = ref(false);
let codeButtonLabel = ref(VERIFY_CODE_TEXT);
const {
    send: sendCodes,
    loading: sendCodeLoading,
    onSuccess: sendCodeSuccess
} = useRequest(phone => sendCode(phone), {immediate: false});


sendCodeSuccess(() => {
    codeButtonState.value = true;
    let countDown = VERIFY_CODE_TIME;
    const timer = setInterval(function () {
        countDown--;
        if (countDown <= 0) {
            clearInterval(timer);
            codeButtonLabel.value = VERIFY_CODE_TEXT;
            codeButtonState.value = false;
        } else {
            codeButtonLabel.value = countDown + VERIFY_CODE_TIME_TEXT;
        }
    }, 1000);
});

//获取小区列表
const {
    data: villageList
} = useRequest(() => getVillageList(), {
    initialData: [],
    immediate: true,
});

// 添加账户
const {
    send: sendPutAccount,
    loading: sendPutAccountLoading
} = useRequest(accountParams => putAccount(accountParams), {immediate: false});

// 添加账户
const confirm = (e: any) => {
    console.log('提交', e.data);
    if (e.validate) {
        e.data.bind_village = e.data.bind_village[0];
        sendPutAccount(e.data).then((res) => {
            toast(TOACT_SUCCESS);
            router.back();
        });
    }
};

</script>
<style>
</style>
